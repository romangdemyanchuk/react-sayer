{"version":3,"sources":["components/Modal/Modal.js","components/Main/index.js","components/Main/main.js","components/app/index.js","components/app/app.js","index.js"],"names":["ModalWindow","state","comment","onCommentChange","e","setState","target","value","onSubmitComment","preventDefault","props","addComment","this","modalIsOpen","closeModal","onLabelChange","onSubmit","modalType","modalTitle","comments","allComments","map","item","className","src","image","alt","text","commentModalBody","onClick","type","name","placeholder","onChange","itemModalBody","isOpen","onRequestClose","style","content","top","left","right","bottom","marginRight","transform","border","width","height","contentLabel","Component","Main","openModal","itemId","itemTitle","itemComment","selectedItemId","selectedItemTitle","selectedItemComment","label","addItem","newItem","title","id","maxId","items","newComment","commentId","itemIndex","indexOf","push","localStorage","setItem","JSON","stringify","deleteItem","index","findIndex","el","slice","deleteOptionsClass","onSwipedLeft","event","parentNode","classList","add","onSwipedRight","remove","user","detect","parse","navigator","userAgent","isMobile","device","document","getElementById","localItems","getItem","lastItem","length","counter","prevProps","prevState","elems","querySelectorAll","forEach","call","links","data-id","paddingRight","App","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.5df7457e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Modal from \"react-modal\";\r\nimport './Modal.css';\r\n\r\nexport default class ModalWindow extends Component {\r\n    state = {\r\n        comment:''\r\n    };\r\n    onCommentChange = (e) => {\r\n        this.setState({\r\n            comment: e.target.value\r\n        });\r\n    };\r\n    onSubmitComment = (e) => {\r\n        e.preventDefault();\r\n        this.props.addComment(this.state.comment);\r\n        this.setState({\r\n            comment:''\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const {modalIsOpen, closeModal, onLabelChange, onSubmit,\r\n            modalType, modalTitle, comments} = this.props;\r\n        const allComments = comments && comments.map((item) => {\r\n            return (\r\n                <div className=\"comment-info\">\r\n                    <img src={item.image} alt='img'/>\r\n                    <div className=\"comment-text\">\r\n                        {item.text}\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n        const customStyles = {\r\n            content : {\r\n                top: '50%', left: '50%', right: 'auto', bottom: 'auto', marginRight: '-50%',\r\n                transform: 'translate(-50%, -50%)', border:'none', width: '280px', height: '450px'\r\n            }\r\n        };\r\n        const commentModalBody = <div className=\"main\">\r\n            <div className=\"info\">\r\n                <div className=\"header-arrow\"\r\n                     onClick={closeModal}>\r\n                    <i className=\"fa fa-arrow-left\"/>\r\n                </div>\r\n                <div className=\"item-title\">\r\n                    {modalTitle}\r\n                </div>\r\n            </div>\r\n            <div className=\"all-comments\">\r\n                <div className=\"all-comments-info\">\r\n                    {allComments}\r\n                </div>\r\n            </div>\r\n            <form className=\"input-info items-info\"\r\n                  onSubmit={this.onSubmitComment}>\r\n                <input className=\"comment\" type=\"text\" name=\"item\" placeholder=\"New comment goes here..\"\r\n                       onChange={this.onCommentChange}\r\n                       value={this.state.comment}/>\r\n                <button className=\"input-btn item-btn\">\r\n                    <i className=\"fa fa-angle-right\"/>\r\n                </button>\r\n            </form>\r\n        </div>;\r\n        const itemModalBody = <div className=\"main\">\r\n            <div className=\"info\">\r\n                <div  className=\"header-arrow\"\r\n                      onClick={closeModal}>\r\n                    <i className=\"fa fa-arrow-left\"/>\r\n                </div>\r\n                <div className=\"item-title\">\r\n                    Create new item\r\n                </div>\r\n            </div>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"input-info\">\r\n                    <input type=\"text\" name=\"item\" placeholder=\"New item title..\"\r\n                           onChange={onLabelChange}/>\r\n                    <button className=\"input-btn\">\r\n                        <i className=\"fa fa-angle-right\"/>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>;\r\n        return (\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\">\r\n                {\r\n                    modalType===\"comment\" ? commentModalBody : itemModalBody\r\n                }\r\n            </Modal>\r\n        );\r\n    }\r\n};","import Main from './main';\r\n\r\nexport default Main;","import React, {Component} from 'react';\r\nimport {Swipeable} from 'react-swipeable'\r\nimport './main.css';\r\nimport Modal from \"../Modal/Modal\";\r\nimport detect from 'detect.js'\r\n\r\nexport default class Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let user = detect.parse(navigator.userAgent);\r\n        this.isMobile = user.device.type === 'Mobile';\r\n        document.getElementById('root').classList.add(this.isMobile ? 'mobile' : 'desktop');\r\n        this.items = [\r\n            {\r\n                \"id\":0,\r\n                \"title\":\"First item with customized long title\",\r\n                \"comments\": [\r\n                    {\r\n                        \"id\": 0,\r\n                        \"image\":\"https://via.placeholder.com/40x40?text=img1\",\r\n                        \"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\" +\r\n                            \" sed do eiusmod sed do eiusmod consectetur\"\r\n                    },\r\n                    {\r\n                        \"id\": 1,\r\n                        \"image\":\"https://via.placeholder.com/40x40?text=img2\",\r\n                        \"text\":\"Ut enim ad minim veniam, quis nostrud exercitation\" +\r\n                            \" ullamco \"\r\n                    },\r\n                    {\r\n                        \"id\": 2,\r\n                        \"image\":\"https://via.placeholder.com/40x40?text=img3\",\r\n                        \"text\":\"Duis aute irure dolor in reprehenderit in voluptate\" +\r\n                            \" \"\r\n                    }\r\n                ]\r\n            },\r\n        ];\r\n        const localItems = localStorage.getItem(\"items\");\r\n        !localItems && localStorage.setItem(\"items\", JSON.stringify(this.items));\r\n        const items = localItems ? JSON.parse(localItems) : this.items;\r\n        const lastItem = items[items.length - 1];\r\n        this.state = {\r\n            modalIsOpen: false,\r\n            items: items,\r\n            modalType:null,\r\n            selectedItemId:null,\r\n            selectedItemTitle:null,\r\n            selectedItemComment:null,\r\n            counter: 1\r\n        };\r\n        this.maxId = lastItem ?  lastItem.id : 0;\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.items !== prevState.items) {\r\n            localStorage.setItem(\"items\", JSON.stringify(this.state.items));\r\n        }\r\n    }\r\n    openModal = (type, itemId, itemTitle, itemComment) => {\r\n        this.setState({\r\n            modalIsOpen: true,\r\n            modalType: type,\r\n            selectedItemId: itemId,\r\n            selectedItemTitle: itemTitle,\r\n            selectedItemComment:itemComment\r\n        });\r\n    };\r\n    closeModal = () => {\r\n        this.setState({\r\n            modalIsOpen: false\r\n        });\r\n    };\r\n    state = {\r\n        label:''\r\n    };\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.addItem(this.state.label);\r\n        this.closeModal();\r\n    };\r\n    addItem = (text) => {\r\n        const newItem = {\r\n            title:text,\r\n            id:++this.maxId,\r\n            comments:[]\r\n        };\r\n        this.setState(({items}) =>{\r\n            const newArr = [\r\n                ...items,\r\n                newItem\r\n            ];\r\n            return {\r\n                items:newArr\r\n            }\r\n        })\r\n    };\r\n    addComment = (text) => {\r\n        const { items } = this.state;\r\n        const newComment = {\r\n            id:this.commentId++,\r\n            text:text,\r\n            image:\"https://via.placeholder.com/40x40?text=imgi\"\r\n        };\r\n        const itemIndex = items.map(e => e.id).indexOf(this.state.selectedItemId);\r\n        items[itemIndex].comments.push(newComment);\r\n        localStorage.setItem(\"items\", JSON.stringify(items));\r\n        this.setState({\r\n            items: items\r\n            }\r\n        )\r\n    };\r\n    deleteOptionsClass() {\r\n        const elems = document.querySelectorAll(\".options\");\r\n        [].forEach.call(elems, function(el) {\r\n            el.classList.remove(\"options\");\r\n        });\r\n    }\r\n    deleteItem = (id) => {\r\n        this.setState(({items}) => {\r\n            const index = items.findIndex((el) => el.id === id);\r\n            const newArr = [\r\n                ...items.slice(0, index),\r\n                ...items.slice(index +1)\r\n            ];\r\n            return {\r\n                items:newArr\r\n            };\r\n        });\r\n        this.deleteOptionsClass();\r\n    };\r\n    onSwipedLeft = (e) => {\r\n        this.deleteOptionsClass();\r\n        e.event.target.parentNode.parentNode.classList.add(\"options\");\r\n    };\r\n    onSwipedRight = (e) => {\r\n        e.event.target.parentNode.parentNode.classList.remove(\"options\");\r\n    };\r\n\r\n    render() {\r\n        const links = this.state.items.map((item) => {\r\n            return (\r\n                <Swipeable\r\n                    onSwipedLeft={this.onSwipedLeft}\r\n                    onSwipedRight={this.onSwipedRight} >\r\n                    <div className=\"item-info\">\r\n                        <div className=\"item-info-wrapper\">\r\n                            <div className=\"item-text\"\r\n                                 data-id={item.id}\r\n                                 onClick={() => this.openModal('comment', item.id, item.title, item.comments)}\r\n                                 style={{paddingRight: item.comments.length > 0 ? '75px' :'10px'}}\r\n                            >\r\n                                {item.title}\r\n                            </div>\r\n                            { item.comments.length > 0 &&\r\n                            <div className=\"item-count\">\r\n                                {item.comments.length}\r\n                            </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"optional-del\">\r\n                            <button className=\"btn-del\" onClick={() => this.deleteItem(item.id)}>\r\n                                { this.isMobile ?\r\n                                'Delete' : <i className=\"fa fa-times\"/>\r\n                                }\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </Swipeable>\r\n            )\r\n        });\r\n        return (\r\n                <div className=\"main-block\">\r\n                    <div className=\"header-info\">\r\n                        <div className=\"header-title\">\r\n                            Sayer\r\n                        </div>\r\n                        <div className=\"header-subtitle\">\r\n                            World's most used time waster\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"main-info\">\r\n                        <div className=\"items\">\r\n                            {links}\r\n                        </div>\r\n                        <div onClick={()=>this.openModal('item')}  className=\"plus-circle\"/>\r\n                    </div>\r\n                    < Modal modalIsOpen={this.state.modalIsOpen}\r\n                            closeModal={this.closeModal}\r\n                            onLabelChange={this.onLabelChange}\r\n                            onSubmit={this.onSubmit}\r\n                            modalType={this.state.modalType}\r\n                            modalTitle={this.state.selectedItemTitle}\r\n                            selectedItemId={this.state.selectedItemId}\r\n                            comments={\r\n                                this.state.selectedItemComment\r\n                            }\r\n                            addComment={this.addComment}\r\n                    />\r\n                </div>\r\n        );\r\n    }\r\n};","import App from './app';\r\n\r\nexport default App;","import React, {Component} from 'react';\r\nimport Main from '../Main';\r\nimport './app.css';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Route path=\"/\" component={Main}/>\r\n            </Router>\r\n        );\r\n    }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}